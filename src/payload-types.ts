/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  collections: {
    product: Product;
    variation: Variation;
    brand: Brand;
    category: Category;
    tag: Tag;
    offer: Offer;
    coupon: Coupon;
    carousel: Carousel;
    modal: Modal;
    message: Message;
    featured: Featured;
    media: Media;
    order: Order;
    users: User;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  globals: {};
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "product".
 */
export interface Product {
  id: string;
  name: string;
  subtitle: string;
  description: {
    [k: string]: unknown;
  }[];
  genere: 'Unisex' | 'Male' | 'Female';
  standard_price: number;
  variations?: (string | Variation)[] | null;
  details: {
    brand: string | Brand;
    categories: (string | Category)[];
    tags?: (string | Tag)[] | null;
  };
  offer?: {
    relationTo?: (string | null) | Offer;
    offer_price?: number | null;
    delivery_free?: boolean | null;
  };
  stripeId?: string | null;
  priceId?: string | null;
  sold: number;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "variation".
 */
export interface Variation {
  id: string;
  name: string;
  primary_color:
    | 'White'
    | 'Gray'
    | 'Black'
    | 'Brown'
    | 'Yellow'
    | 'Orange'
    | 'Red'
    | 'Pink'
    | 'Purple'
    | 'Blue'
    | 'Green';
  secondary_color?:
    | ('White' | 'Gray' | 'Black' | 'Brown' | 'Yellow' | 'Orange' | 'Red' | 'Pink' | 'Purple' | 'Blue' | 'Green')
    | null;
  images: {
    image: string | Media;
    id?: string | null;
  }[];
  standard_price?: number | null;
  product?: (string | null) | Product;
  stripeId?: string | null;
  priceId?: string | null;
  offer?: {
    relationTo?: (string | null) | Offer;
    offer_price?: number | null;
    delivery_free?: boolean | null;
  };
  stock: {
    size:
      | '5'
      | '5.5'
      | '6'
      | '6.5'
      | '7'
      | '7.5'
      | '8'
      | '8.5'
      | '9'
      | '9.5'
      | '10'
      | '10.5'
      | '11'
      | '11.5'
      | '12'
      | '12.5'
      | '13'
      | '13.5'
      | '14';
    amount: number;
    id?: string | null;
  }[];
  sold: number;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  variations?: (string | null) | Variation;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "offer".
 */
export interface Offer {
  id: string;
  name: string;
  page_title: string;
  banner?: string | Media | null;
  detail_banner?: string | Media | null;
  items?:
    | {
        item_type: 'product' | 'variation';
        product?: (string | null) | Product;
        variation?: (string | null) | Variation;
        discount_type: 'new_price' | 'delivery_free' | 'none';
        new_price?: number | null;
        limit?: number | null;
        sold: number;
        stripeId?: string | null;
        priceId?: string | null;
        id?: string | null;
      }[]
    | null;
  sold: number;
  with_coupon: boolean;
  enable: boolean;
  expiration: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "brand".
 */
export interface Brand {
  id: string;
  name: string;
  quantity: number;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "category".
 */
export interface Category {
  id: string;
  name: string;
  quantity: number;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tag".
 */
export interface Tag {
  id: string;
  name: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "coupon".
 */
export interface Coupon {
  id: string;
  name: string;
  message?: (string | null) | Message;
  modal?: (string | null) | Modal;
  requirements?:
    | {
        brands?: (string | Brand)[] | null;
        categories?: (string | Category)[] | null;
        value_min?: number | null;
        id?: string | null;
      }[]
    | null;
  select_products_variations?: {
    products?: (string | Product)[] | null;
    variations?: (string | Variation)[] | null;
  };
  code: string;
  discount: 'percentage' | 'value' | 'delivery_free';
  percentage_value?: number | null;
  fixed_value?: number | null;
  application_with_offer: boolean;
  enable: boolean;
  expiration: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "message".
 */
export interface Message {
  id: string;
  name: string;
  card: string | Media;
  title: string;
  description: string;
  linkTo?: (string | null) | Modal;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "modal".
 */
export interface Modal {
  id: string;
  name: string;
  banner: string | Media;
  content: {
    [k: string]: unknown;
  }[];
  linkType: 'Product' | 'Variation' | 'Brand' | 'Category' | 'Offer' | 'None';
  product?: (string | null) | Product;
  variation?: (string | null) | Variation;
  brand?: (string | null) | Brand;
  category?: (string | null) | Category;
  offer?: (string | null) | Offer;
  buttonLabel?: string | null;
  active: boolean;
  expiryDate?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "carousel".
 */
export interface Carousel {
  id: string;
  name: string;
  image_desktop: string | Media;
  image_mobile: string | Media;
  type: 'Link' | 'Modal';
  type_link?: ('Product' | 'Variation' | 'Brand' | 'Category' | 'Offer') | null;
  product?: (string | null) | Product;
  variation?: (string | null) | Variation;
  brand?: (string | null) | Brand;
  category?: (string | null) | Category;
  offer?: (string | null) | Offer;
  modal?: (string | null) | Modal;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "featured".
 */
export interface Featured {
  id: string;
  products: (string | Product)[];
  brands?:
    | {
        cover: string | Media;
        brand: string | Brand;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "order".
 */
export interface Order {
  id: string;
  items: string | Variation;
  purchase_info: string;
  address: Address;
  tracking_code?: string | null;
  is_paid: boolean;
  finished: boolean;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Address".
 */
export interface Address {
  first_name: string;
  last_name: string;
  email: string;
  phone: number;
  zip_code: number;
  state: string;
  town_city: string;
  note?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}